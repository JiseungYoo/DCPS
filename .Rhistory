weight = sum(weight, na.rm = TRUE),
core_titles = paste(core_title, collapse = ""),
supp_titles = paste(supp_title, collapse = "")) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, core_titles),
weight = ifelse(is.na(core_titles), weight - 1,   weight))
View(english_courses.student_year)
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, ""))
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, ""))
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = paste(core_title, collapse = ""),
supp_titles = paste(supp_title, collapse = ""))
## graph course taking ----
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = paste(core_title, collapse = ""),
supp_titles = paste(supp_title, collapse = "")) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, supp_titles),
weight = ifelse(is.na(core_titles), weight - 1,   weight))
## graph course taking ----
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = paste(core_title, collapse = ""),
supp_titles = paste(supp_title, collapse = "")) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, supp_titles),
weight = ifelse(is.na(core_titles), weight - 1,   weight)) %>%
ggplot(aes(weight)) +
geom_histogram() +
facet_grid(rows = vars(Grade), cols = vars(year))
## graph course taking ----
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = paste(core_title, collapse = ""),
supp_titles = paste(supp_title, collapse = "")) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, supp_titles),
weight = ifelse(is.na(core_titles), weight - 1,   weight))
custom_paste <- function(vectors) {
# Remove NA and empty strings
vectors <- vectors %>%
replace_na("") %>%
discard(~ .x == "")
# If all elements are NA or empty, return NA
if(length(vectors) == 0) {
return(NA)
}
# Remove duplicates but keep one instance
vectors <- vectors %>%
unique()
# Concatenate the strings with the specified separator
result <- vectors %>%
reduce(str_c, sep = ";")
return(result)
}
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = custom_paste(core_title, collapse = ""), # write function with no duplication or extra separators
supp_titles = custom_paste(supp_title, collapse = "")) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, supp_titles),
weight = ifelse(is.na(core_titles), weight - 1,   weight))
custom_paste <- function(vectors) {
# Remove NA and empty strings
vectors <- vectors %>%
replace_na("") %>%
discard(~ .x == "")
# If all elements are NA or empty, return NA
if(length(vectors) == 0) {
return(NA)
}
# Remove duplicates but keep one instance
vectors <- vectors %>%
unique()
# Concatenate the strings with the specified separator
result <- vectors %>%
reduce(str_c, sep = ";")
return(result)
}
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = custom_paste(core_title, collapse = ""), # write function with no duplication or extra separators
supp_titles = custom_paste(supp_title, collapse = "")) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, supp_titles),
weight = ifelse(is.na(core_titles), weight - 1,   weight))
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = custom_paste(core_title), # write function with no duplication or extra separators
supp_titles = custom_paste(supp_title)) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, supp_titles),
weight = ifelse(is.na(core_titles), weight - 1,   weight))
english_courses.student_year %>%
ggplot(aes(weight)) +
geom_histogram() +
facet_grid(rows = vars(Grade), cols = vars(year))
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = custom_paste(core_title), # write function with no duplication or extra separators
supp_titles = custom_paste(supp_title))
custom_paste <- function(vectors) {
# Remove NA and empty strings
vectors <- vectors %>%
replace_na("") %>%
discard(~ .x == "")
# If all elements are NA or empty, return NA
if(length(vectors) == 0) {
return(NA_character_)
}
# Remove duplicates but keep one instance
vectors <- vectors %>%
unique()
# Concatenate the strings with the specified separator
result <- vectors %>%
reduce(str_c, sep = ";")
return(result)
}
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = custom_paste(core_title), # write function with no duplication or extra separators
supp_titles = custom_paste(supp_title)) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, supp_titles),
weight = ifelse(is.na(core_titles), weight - 1,   weight))
custom_paste <- function(...) {
vectors <- c(...)
# Remove NA and empty strings
vectors <- vectors %>%
replace_na("") %>%
discard(~ .x == "")
# If all elements are NA or empty, return NA
if(length(vectors) == 0) {
return(NA_character_)
}
# Remove duplicates but keep one instance
vectors <- vectors %>%
unique()
# Concatenate the strings with the specified separator
result <- vectors %>%
reduce(str_c, sep = ";")
return(result)
}
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = custom_paste(core_title), # write function with no duplication or extra separators
supp_titles = custom_paste(supp_title)) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, supp_titles),
weight = ifelse(is.na(core_titles), weight - 1,   weight))
custom_paste <- function(vectors) {
# Apply the function to each element of the vector
result <- purrr::map_chr(vectors, function(x) {
# Split the string into separate words
words <- str_split(x, ";")[[1]]
# Remove NA and empty strings
words <- words %>%
replace_na("") %>%
discard(~ .x == "")
# If all elements are NA or empty, return NA
if(length(words) == 0) {
return(NA_character_)
}
# Remove duplicates but keep one instance
words <- words %>%
unique()
# Concatenate the strings with the specified separator
result <- words %>%
reduce(str_c, sep = ";")
return(result)
})
return(result)
}
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = custom_paste(core_title), # write function with no duplication or extra separators
supp_titles = custom_paste(supp_title)) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, supp_titles),
weight = ifelse(is.na(core_titles), weight - 1,   weight))
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = map_chr(core_title, custom_paste),
supp_titles = map_chr(supp_title, custom_paste)) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, supp_titles),
weight = ifelse(is.na(core_titles), weight - 1,   weight))
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = paste(core_title, collapse = ""), # write function with no duplication or extra separators
supp_titles = paste(supp_title, collapse = "")) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, supp_titles),
weight = ifelse(is.na(core_titles), weight - 1,   weight))
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = collapse_unique(core_title), # write function with no duplication or extra separators
supp_titles = collapse_unique(supp_title)) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, supp_titles),
weight = ifelse(is.na(core_titles), weight - 1,   weight))
# Collapse into a single string
paste(x, collapse = sep)
collapse_unique <- function(x, sep = ";") {
# Remove NA or empty values
x <- x[!is.na(x) & x != ""]
# If all values are removed, return NA
if(length(x) == 0) {
return(NA)
}
# Remove duplicates
x <- unique(x)
# Collapse into a single string
paste(x, collapse = sep)
}
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = collapse_unique(core_title), # write function with no duplication or extra separators
supp_titles = collapse_unique(supp_title)) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, supp_titles),
weight = ifelse(is.na(core_titles), weight - 1,   weight))
collapse_unique <- function(x, sep = "; ") {
# Remove NA or empty values
x <- x[!is.na(x) & x != ""]
# If all values are removed, return NA
if(length(x) == 0) {
return(NA)
}
# Remove duplicates
x <- unique(x)
# Collapse into a single string
paste(x, collapse = sep)
}
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = collapse_unique(core_title), # write function with no duplication or extra separators
supp_titles = collapse_unique(supp_title)) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, supp_titles),
weight = ifelse(is.na(core_titles), weight - 1,   weight))
collapse_unique <- function(x, sep = "; ") {
# Remove NA or empty values
x <- x[!is.na(x) & x != ""]
# If all values are removed, return NA
if(length(x) == 0) {
return(NA)
}
# Remove duplicates
x <- unique(x)
# Collapse into a single string
paste(x, collapse = sep)
}
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = collapse_unique(core_title), # write function with no duplication or extra separators
supp_titles = collapse_unique(supp_title)) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, supp_titles),
weight = ifelse(is.na(core_titles), weight - 1,   weight))
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = collapse_unique(core_title), # write function with no duplication or extra separators
supp_titles = collapse_unique(supp_title)) %>%
mutate(
core_titles = ifelse(core_titles == "", NA, core_titles),
supp_titles = ifelse(supp_titles == "", NA, supp_titles),
weight = ifelse(!is.na(core_titles), weight - 1,   weight))
english_courses.student_year %>%
ggplot(aes(weight)) +
geom_histogram() +
facet_grid(rows = vars(Grade), cols = vars(year))
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = collapse_unique(core_title), # write function with no duplication or extra separators
supp_titles = collapse_unique(supp_title)) %>%
mutate(weight = ifelse(!is.na(core_titles), weight - 1,   weight))
english_courses.student_year %>%
ggplot(aes(weight)) +
geom_histogram() +
facet_grid(rows = vars(Grade), cols = vars(year))
View(df)
collapse_unique <- function(x, sep = "; ") {
x <- x[!is.na(x) & x != ""]
if(length(x) == 0) return(NA)
x <- unique(x)
paste(x, collapse = sep)
}
collapse_unique <- function(x, sep = "; ") {
x <- x[!is.na(x) & x != ""]
if(length(x) == 0) return(NA)
x <- unique(x)
paste(x, collapse = sep)
}
english_courses.student_year <-
df %>%
filter(Grade %in% 6:8, Title %in% c(english_course_titles, supplemental_english_titles)) %>%
mutate(weight = case_match(Term_Code, c("FY" ,"FYCB", "FYCB") ~ 1,
glue("S{1:2}") ~ .5, glue("T{1:4}")~ .25, .default = NA),
core_title = ifelse(Title %in% english_course_titles, Title, ""),
supp_title = ifelse(Title %in% supplemental_english_titles, Title, "")) %>%
group_by(StudentID, year) %>%
reframe(
Grade = mean(Grade),
weight = sum(weight, na.rm = TRUE),
core_titles = collapse_unique(core_title), # write function with no duplication or extra separators
supp_titles = collapse_unique(supp_title)) %>%
mutate(weight = ifelse(!is.na(core_titles), weight - 1,   weight))
english_courses.student_year %>%
ggplot(aes(weight)) +
geom_histogram() +
facet_grid(rows = vars(Grade), cols = vars(year))
